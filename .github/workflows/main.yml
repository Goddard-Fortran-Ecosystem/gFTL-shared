name: CI Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # Do not run if the only files changed cannot affect the build
    paths-ignore:
      - "**.md"
      - "**.MD"
      - "LICENSE"

jobs:
  GNU:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12]
        compiler: [gfortran-9, gfortran-10, gfortran-11, gfortran-12]
        exclude:
          - os: ubuntu-20.04
            compiler: gfortran-11
          - os: ubuntu-20.04
            compiler: gfortran-12
          - os: ubuntu-22.04
            compiler: gfortran-9
          - os: macos-11
            compiler: gfortran-12
          - os: macos-12
            compiler: gfortran-9
          - os: macos-12
            compiler: gfortran-10
          - os: macos-12
            compiler: gfortran-12

      # fail-fast if set to 'true' here is good for production, but when
      # debugging, set to 'false'. fail-fast means if *any* ci test in the matrix fails
      # GitHub Actions will stop any other test immediately. So good for production, bad
      # when trying to figure something out. For more info see:
      # https://www.edwardthomson.com/blog/github_actions_6_fail_fast_matrix_workflows.html

      fail-fast: false
    env:
      FC: ${{ matrix.compiler }}
      LANGUAGE: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LC_TYPE: en_US.UTF-8
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none

    name: ${{ matrix.os }} / ${{ matrix.compiler }}
    steps:
      - name: Install GCC 12 on Ubuntu 22.04
        if: matrix.os == 'ubuntu-22.04' && matrix.compiler == 'gfortran-12'
        run: |
          sudo apt-get install gfortran-12 -y
      - name: Compiler Versions
        run: |
          ${FC} --version
          cmake --version
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Build gFTL-shared
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_Fortran_COMPILER=${FC}
          make -j$(nproc)
      - name: Archive log files on failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: logfiles
          path: |
            build/**/*.log


  Nvidia:
    runs-on: ubuntu-20.04
    container: nvcr.io/nvidia/nvhpc:20.11-devel-cuda11.1-ubuntu20.04
    env:
      FC: nvfortran

    name: Nvidia HPC
    steps:
      - name: Versions
        run: |
          ${FC} --version
          cmake --version
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Build gFTL-shared
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_Fortran_COMPILER=${FC}
          make -j$(nproc)
