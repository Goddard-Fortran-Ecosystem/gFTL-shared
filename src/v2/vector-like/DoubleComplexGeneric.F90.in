module gFTL2_DoubleComplex@Container@

#if defined(_DOUBLE_DEFAULT_KIND_IS_REAL64)

  use gFTL2_Complex64@Container@, DoubleComplex@Container@ => Complex64@Container@, &
       & DoubleComplex@Container@Iterator => Complex64@Container@Iterator, &
       & DoubleComplex@Container@RIterator => Complex64@Container@RIterator
  

#elif defined(_REAL_DEFAULT_KIND_IS_REAL128)

  use gFTL2_Complex128@Container@, DoubleComplex@Container@ => Complex128@Container@, &
       & DoubleComplex@Container@Iterator => Complex128@Container@Iterator, &
       & DoubleComplex@Container@RIterator => Complex128@Container@RIterator

#else

#  define T __DOUBLE_PRECISION
#  define @Container@ DoubleComplex@Container@
#  define @Container@Iterator DoubleComplex@Container@Iterator
#  define @Container@RIterator DoubleComplex@Container@RIterator
#  include "@container@/template.inc"
#  undef @Container@RIterator
#  undef @Container@Iterator
#  undef @Container@
#  undef T

#endif

end module gFTL2_DoubleComplex@Container@
module gFTL_DoubleComplex@Container@
   use gFTL2_DoubleComplex@Container@
end module gFTL_DoubleComplex@Container@
